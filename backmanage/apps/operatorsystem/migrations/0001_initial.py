# Generated by Django 2.0.7 on 2018-12-13 13:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('type', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Box2Sku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_created=True, auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('sku_min', models.IntegerField(default=1, help_text='sku下限', verbose_name='sku下限')),
                ('sku_max', models.IntegerField(default=100, help_text='sku上限', verbose_name='sku上限')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '门店和sku中间表',
                'verbose_name_plural': '门店和sku中间表',
                'db_table': 'box2sku',
            },
        ),
        migrations.CreateModel(
            name='BoxManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='门店名称')),
                ('imageUrl', models.CharField(max_length=200, null=True, verbose_name='门店照片')),
                ('number', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='门店编号')),
                ('store_mode', models.IntegerField(choices=[(0, '盒子'), (1, '货柜'), (2, '社区店'), (3, '改造店')], default=0, verbose_name='门店形式')),
                ('operation_mode', models.IntegerField(choices=[(0, '自营'), (1, '加盟')], default=0, verbose_name='运营模式')),
                ('province', models.CharField(default='', max_length=100, verbose_name='省份')),
                ('city', models.CharField(default='', max_length=100, verbose_name='城市')),
                ('area', models.CharField(default='', max_length=100, verbose_name='区域')),
                ('addr', models.CharField(default='', max_length=100, verbose_name='详细地址')),
                ('latitude_longitude', models.CharField(max_length=100, null=True, verbose_name='经纬度')),
                ('Business_circle', models.IntegerField(choices=[(0, '社区'), (1, '写字楼'), (2, '酒店'), (3, '车站'), (4, '医院'), (5, '学校'), (6, '景区')], verbose_name='商圈')),
                ('bindWarehouseTime', models.DateTimeField(auto_now_add=True, verbose_name='绑定仓库时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='门店创建时间')),
                ('start_time', models.DateField(auto_now_add=True, verbose_name='开业时间')),
                ('end_time', models.DateField(auto_now_add=True, verbose_name='结业时间')),
                ('status', models.IntegerField(choices=[(0, '审核中'), (1, '已通过'), (2, '不通过'), (3, '已关闭'), (4, '营业'), (5, '停业'), (6, '闭店')], default=0, help_text='审核状态', verbose_name='审核状态')),
                ('develop_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='b_develop_user', to=settings.AUTH_USER_MODEL, verbose_name='发展负责人')),
                ('operation_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='b_operation_user', to=settings.AUTH_USER_MODEL, verbose_name='运维负责人')),
            ],
            options={
                'verbose_name': '门店管理',
                'verbose_name_plural': '门店管理',
                'db_table': 'box_manage',
            },
        ),
        migrations.CreateModel(
            name='BrandCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='品牌代码')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='品牌名字')),
            ],
            options={
                'verbose_name': '品牌字典',
                'verbose_name_plural': '品牌字典',
                'db_table': 'brand_code',
            },
        ),
        migrations.CreateModel(
            name='CompanyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_created=True, auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('company_type', models.CharField(help_text='公司类型', max_length=30, unique=True, verbose_name='公司类型')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '公司类型',
                'verbose_name_plural': '公司类型',
                'db_table': 'company_type',
            },
        ),
        migrations.CreateModel(
            name='GoodsManage',
            fields=[
                ('name', models.CharField(max_length=100, verbose_name='商品名称')),
                ('number', models.CharField(blank=True, max_length=100, null=True, verbose_name='商品编号')),
                ('imageUrl', models.CharField(default='http://127.0.0.1:8000/media/box_image/amir.png', max_length=100, verbose_name='商品图片')),
                ('international_code', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True, verbose_name='国际条码')),
                ('product_addr', models.CharField(max_length=100, verbose_name='产地地址')),
                ('enter_rate', models.IntegerField(choices=[(0, '0%'), (1, '6%'), (2, '10%'), (3, '16%')], verbose_name='进项税率')),
                ('sale_rate', models.IntegerField(choices=[(0, '0%'), (1, '6%'), (2, '10%'), (3, '16%')], verbose_name='销项税率')),
                ('packing_unit', models.IntegerField(choices=[(0, '包'), (1, '盒'), (2, '袋'), (3, '瓶'), (4, '杯'), (5, '碗'), (6, '桶'), (7, '只'), (8, '把'), (9, '条'), (10, '卡'), (11, '罐'), (12, '支'), (13, '块'), (14, '筒'), (15, '组'), (16, '套'), (17, '提'), (18, '本'), (19, '个'), (20, '册'), (21, '双'), (22, '件'), (23, '捆'), (24, '听')], verbose_name='单位')),
                ('guig', models.CharField(max_length=100, verbose_name='规格')),
                ('shelf_life', models.CharField(max_length=100, verbose_name='保证期')),
                ('goods_status', models.IntegerField(choices=[(0, '正常'), (1, '清退'), (2, '淘汰')], default=0, verbose_name='商品状态')),
                ('goods_detail', models.CharField(max_length=400, verbose_name='商品详情')),
                ('box_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='包装箱码')),
                ('specification', models.CharField(blank=True, max_length=100, null=True, verbose_name='包装规格')),
                ('min_Purchase_num', models.IntegerField(verbose_name='最低采购数量')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('big_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='big_type', to='type.BigType', verbose_name='大类')),
                ('brand_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brand_code', to='operatorsystem.BrandCode', verbose_name='品牌字典库')),
                ('child_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_type', to='type.ChildType', verbose_name='子类')),
                ('middle_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='middle_type', to='type.MiddleType', verbose_name='中类')),
                ('small_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='small_type', to='type.SmallType', verbose_name='小类')),
            ],
            options={
                'verbose_name': '商品管理',
                'verbose_name_plural': '商品管理',
                'db_table': 'goods_manage',
            },
        ),
        migrations.CreateModel(
            name='Group2Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_created=True, auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('guide_price', models.FloatField(help_text='指导价', verbose_name='指导价')),
                ('goods', models.ForeignKey(help_text='店群', on_delete=django.db.models.deletion.CASCADE, to='operatorsystem.GoodsManage', verbose_name='商品')),
            ],
            options={
                'verbose_name': '店群指导价',
                'verbose_name_plural': '店群指导价',
                'db_table': 'group2price',
            },
        ),
        migrations.CreateModel(
            name='Group2Sku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_created=True, auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('sku_min', models.IntegerField(default=1, help_text='sku下限', verbose_name='sku下限')),
                ('sku_max', models.IntegerField(default=100, help_text='sku上限', verbose_name='sku上限')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '店群和sku中间表',
                'verbose_name_plural': '店群和sku中间表',
                'db_table': 'group2sku',
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_created=True, auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('payments', models.CharField(help_text='结算方式', max_length=20, unique=True, verbose_name='结算方式')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '结算方式',
                'verbose_name_plural': '结算方式',
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='StoreGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.CharField(help_text='店群编号', max_length=32, null=True, unique=True, verbose_name='店群编号')),
                ('group_name', models.CharField(help_text='店群', max_length=20, unique=True, verbose_name='店群')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=200, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('status', models.IntegerField(choices=[(0, '审核中'), (1, '已通过'), (2, '不通过'), (3, '已关闭')], default=0, help_text='审核状态', verbose_name='审核状态')),
                ('skus', models.ManyToManyField(help_text='sku控制', through='operatorsystem.Group2Sku', to='type.SmallType', verbose_name='sku控制')),
            ],
            options={
                'verbose_name': '店群',
                'verbose_name_plural': '店群',
                'db_table': 'storegroup',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_created=True, auto_now_add=True, help_text='创建时间')),
                ('name', models.CharField(help_text='供应商名称', max_length=60, verbose_name='供应商名称')),
                ('number', models.CharField(help_text='供应商编号', max_length=7, unique=True, verbose_name='供应商编号')),
                ('company_regist_num', models.CharField(help_text='工商注册号', max_length=18, unique=True, verbose_name='工商注册号')),
                ('province', models.CharField(help_text='省份', max_length=30, verbose_name='省份')),
                ('city', models.CharField(help_text='市', max_length=30, verbose_name='城市')),
                ('area', models.CharField(help_text='区/县', max_length=30, verbose_name='区域')),
                ('product_addr', models.CharField(blank=True, help_text='生产地址', max_length=100, null=True, verbose_name='生产地址')),
                ('business_addr', models.CharField(blank=True, help_text='经营地址', max_length=100, null=True, verbose_name='经营地址')),
                ('company_name', models.CharField(blank=True, help_text='公司名称', max_length=60, null=True, verbose_name='公司名称')),
                ('company_addr', models.CharField(blank=True, help_text='公司地址', max_length=100, null=True, verbose_name='公司地址')),
                ('contact', models.CharField(help_text='联系人', max_length=100, verbose_name='联系人')),
                ('iphone', models.CharField(help_text='联系电话', max_length=100, verbose_name='联系电话')),
                ('email', models.CharField(blank=True, help_text='邮箱', max_length=100, null=True, verbose_name='邮箱')),
                ('fax', models.CharField(blank=True, help_text='传真', max_length=100, null=True, verbose_name='传真')),
                ('remarks', models.CharField(blank=True, help_text='备注', max_length=100, null=True, verbose_name='备注')),
                ('taxpayer_num', models.CharField(help_text='纳税人识别号', max_length=60, unique=True, verbose_name='纳税人识别号')),
                ('bank_name', models.CharField(help_text='开户行', max_length=60, verbose_name='开户行')),
                ('bank_account', models.CharField(help_text='开户行账号', max_length=30, verbose_name='开户行账号')),
                ('bank_addr', models.CharField(help_text='开户行地址', max_length=100, verbose_name='开户行地址')),
                ('status', models.IntegerField(choices=[(0, '启用'), (1, '停用')], default=0, help_text='状态')),
                ('rate', models.IntegerField(default=0, help_text='通道费率', verbose_name='通道费率')),
                ('company_type', models.ForeignKey(help_text='公司类型', null=True, on_delete=django.db.models.deletion.CASCADE, to='operatorsystem.CompanyType', verbose_name='公司类型')),
            ],
            options={
                'verbose_name': '供应商管理',
                'verbose_name_plural': '供应商管理',
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='SupplierGoodsManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_price', models.FloatField(blank=True, help_text='采购进价', null=True, verbose_name='采购进价')),
                ('discount_price', models.FloatField(blank=True, help_text='促销进价', null=True, verbose_name='促销价')),
                ('sale_min_count', models.IntegerField(blank=True, default=100, help_text='采购起始数量', null=True, verbose_name='采购起始数量')),
                ('discount_min_count', models.IntegerField(blank=True, default=200, help_text='促销起始数量', null=True, verbose_name='促销起始数量')),
                ('sale_status', models.IntegerField(blank=True, choices=[(0, '待审核'), (1, '审核通过'), (2, '审核未通过')], default=0, help_text='采购进价审核状态', null=True, verbose_name='采购进价审核状态')),
                ('sale_check_remark', models.CharField(blank=True, help_text='采购价审核备注', max_length=200, null=True, verbose_name='采购价审核备注')),
                ('discount_status', models.IntegerField(blank=True, choices=[(0, '待审核'), (1, '审核通过'), (2, '审核未通过')], default=0, help_text='促销进价审核状态', null=True, verbose_name='促销进价审核状态')),
                ('discount_check_remark', models.CharField(blank=True, help_text='促销进价审核备注', max_length=200, null=True, verbose_name='促销进价审核备注')),
                ('sale_apply_time', models.DateTimeField(blank=True, help_text='采购进价发起时间', null=True, verbose_name='采购进价发起时间')),
                ('discount_apply_time', models.DateTimeField(blank=True, help_text='促销进价发起时间', null=True, verbose_name='促销进价发起时间')),
                ('sale_check_time', models.DateTimeField(blank=True, help_text='采购进价审核时间', null=True, verbose_name='采购进价审核时间')),
                ('discount_check_time', models.DateTimeField(blank=True, help_text='促销进价审核时间', null=True, verbose_name='促销进价审核时间')),
                ('supply_status', models.IntegerField(blank=True, choices=[(0, '启用'), (1, '停用')], default=0, help_text='供应状态', null=True, verbose_name='供应状态')),
                ('discount_start_time', models.DateTimeField(blank=True, help_text='促销开始时间', null=True, verbose_name='促销开始时间')),
                ('discount_end_time', models.DateTimeField(blank=True, help_text='促销结束时间', null=True, verbose_name='促销结束时间')),
                ('is_discount', models.BooleanField(default=False, help_text='是否打折', verbose_name='是否打折')),
                ('apply_user', models.ForeignKey(blank=True, help_text='进价，促销价申请人', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
                ('goods', models.ForeignKey(blank=True, help_text='商品', null=True, on_delete=django.db.models.deletion.CASCADE, to='operatorsystem.GoodsManage', verbose_name='商品')),
                ('supplier', models.ForeignKey(blank=True, help_text='供应商', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_goods', to='operatorsystem.Supplier', verbose_name='供应商')),
            ],
            options={
                'verbose_name': '供应商商品管理',
                'verbose_name_plural': '供应商商品管理',
                'db_table': 'supplier_goods_manage',
            },
        ),
        migrations.CreateModel(
            name='UploadImageUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageUrl', models.ImageField(upload_to='box_image/', verbose_name='商品图片')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '图片上传',
                'verbose_name_plural': '图片上传',
                'db_table': 'upload_image',
            },
        ),
        migrations.CreateModel(
            name='WareHouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='仓库名称')),
                ('number', models.CharField(blank=True, max_length=100, null=True, verbose_name='仓库编号')),
                ('province', models.CharField(max_length=100, verbose_name='省份')),
                ('city', models.CharField(max_length=100, verbose_name='城市')),
                ('area', models.CharField(max_length=100, verbose_name='区域')),
                ('addr', models.CharField(max_length=100, verbose_name='详细地址')),
                ('size', models.CharField(default=0, max_length=100, verbose_name='面积')),
                ('latitude_longitude', models.CharField(blank=True, max_length=100, null=True, verbose_name='经纬度')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='仓库创建时间')),
                ('start_time', models.DateField(null=True, verbose_name='开业时间')),
                ('end_time', models.DateField(null=True, verbose_name='结业时间')),
                ('status', models.IntegerField(choices=[(0, '审核中'), (1, '已通过'), (2, '不通过'), (3, '已关闭'), (4, '启用'), (5, '停用')], default=0, help_text='审核状态', verbose_name='审核状态')),
                ('develop_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='w_develop_user', to=settings.AUTH_USER_MODEL, verbose_name='发展负责人')),
                ('operation_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='w_operation_user', to=settings.AUTH_USER_MODEL, verbose_name='运维负责人')),
            ],
            options={
                'verbose_name': '仓库管理',
                'verbose_name_plural': '仓库管理',
                'db_table': 'warehouse',
            },
        ),
        migrations.AddField(
            model_name='supplier',
            name='goods',
            field=models.ManyToManyField(help_text='所供商品', through='operatorsystem.SupplierGoodsManage', to='operatorsystem.GoodsManage', verbose_name='供应商所供商品'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='officer',
            field=models.ForeignKey(help_text='负责人', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='负责人'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='payments',
            field=models.ForeignKey(help_text='结算方式', on_delete=django.db.models.deletion.CASCADE, to='operatorsystem.Payments', verbose_name='结算方式'),
        ),
        migrations.AddField(
            model_name='group2sku',
            name='group',
            field=models.ForeignKey(help_text='店群', on_delete=django.db.models.deletion.CASCADE, related_name='g_skus', to='operatorsystem.StoreGroup', verbose_name='店群'),
        ),
        migrations.AddField(
            model_name='group2sku',
            name='small_type',
            field=models.ForeignKey(help_text='SKU', on_delete=django.db.models.deletion.CASCADE, to='type.SmallType', verbose_name='SKU'),
        ),
        migrations.AddField(
            model_name='group2price',
            name='group',
            field=models.ForeignKey(help_text='店群', on_delete=django.db.models.deletion.CASCADE, related_name='group_guide_prices', to='operatorsystem.StoreGroup', verbose_name='店群'),
        ),
        migrations.AddField(
            model_name='boxmanage',
            name='store_group',
            field=models.ForeignKey(help_text='所属店群', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='boxes', to='operatorsystem.StoreGroup', verbose_name='所属店群'),
        ),
        migrations.AddField(
            model_name='boxmanage',
            name='warehouse',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ware', to='operatorsystem.WareHouse', verbose_name='仓库名'),
        ),
        migrations.AddField(
            model_name='box2sku',
            name='box',
            field=models.ForeignKey(help_text='门店', on_delete=django.db.models.deletion.CASCADE, related_name='skus', to='operatorsystem.BoxManage', verbose_name='门店'),
        ),
        migrations.AddField(
            model_name='box2sku',
            name='small_type',
            field=models.ForeignKey(help_text='SKU', on_delete=django.db.models.deletion.CASCADE, to='type.SmallType', verbose_name='SKU'),
        ),
        migrations.AlterUniqueTogether(
            name='suppliergoodsmanage',
            unique_together={('supplier', 'goods')},
        ),
        migrations.AlterUniqueTogether(
            name='group2sku',
            unique_together={('small_type', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='group2price',
            unique_together={('group', 'goods')},
        ),
        migrations.AlterUniqueTogether(
            name='box2sku',
            unique_together={('small_type', 'box')},
        ),
    ]
